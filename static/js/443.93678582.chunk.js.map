{"version":3,"file":"static/js/443.93678582.chunk.js","mappings":"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","sources":["API/index.js","components/HandleError/HandleError.styled.jsx","components/HandleError/HandleError.jsx","components/MovieData/MovieData.styled.jsx","components/MovieData/MovieData.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '71d3c9744b233f536e82db6c03830bc2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async page => {\n    const response = await axios.get(`/trending/all/day?api_key=${API_KEY}&page=${page}`);\n    return response.data.results;\n}\n\nexport const fetchSearchMovies = async (value, page) => {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      language: 'en-US',\n      page: page,\n      include_adult: false,\n      query: value,\n    });\n\n    const response = await axios.get(`/search/movie?${searchParams}`);\n    return response.data;\n}\n\nexport const fetchMovieData = async id => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US'`);\n    return response.data;\n}\n \nexport const fetchMovieCast = async id => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US'`);\n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async id => { \n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n    })\n    const response = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n    return response.data.results;\n\n}","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 15px;\n  line-height: 1.2;\n  color: #000000;\n`;\n\n","import PropTypes from 'prop-types';\n\nimport { Wrap, Text } from './HandleError.styled';\n\nconst HandleError = ({ title }) => {\n  return (\n    <Wrap>\n      <Text>{title}</Text>\n    </Wrap>\n  );\n};\n\nHandleError.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default HandleError;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Img = styled.img`\n  @media screen and (max-width: 350px) {\n    max-width: 200px;\n    height: auto;\n  }\n  max-width: 300px;\n  height: auto;\n`;\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  padding: 15px 20px;\n  border-bottom: 2px solid #121110;\n\n  @media screen and (min-width: 690px) {\n    text-align: left;\n    display: flex;\n    gap: 40px;\n  }\n`;\n\nexport const InfoBlock = styled.div`\n  border-bottom: 2px solid #121110;\n  margin-bottom: 40px;\n`;\n\nexport const Text = styled.h4`\n  /* text-align: center; */\n  margin: 20px 0;\n`;\n\nexport const BtnList = styled.ul`\n  display: flex;\n  /* justify-content: center; */\n  align-items: center;\n  gap: 10px;\n  list-style: none;\n  margin: 0 0 20px 0;\n  padding: 0;\n`;\n\nexport const BtnLink = styled(NavLink)`\n  display: inline-block;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border: 1px solid #121110;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    color: white;\n    background-color: #121110;\n  }\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: #121110;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { BtnLink, BtnList, Img, InfoBlock, Text, Wrapper } from './MovieData.styled';\n\n\nconst API_URL_IMG = `https://image.tmdb.org/t/p/original`;\n\nconst MovieData = ({ data }) => {\n  const { poster_path, title, name, vote_average, overview, genres } = data;\n\n  const getGenres = genres => {\n    if (genres) {\n      const genresName = genres.map(genre => genre.name);\n      return genresName.join(', ');\n    }\n    return;\n  };\n\n  return (\n    <div>\n      <Wrapper>\n        <Img src={API_URL_IMG + poster_path} alt={title ?? name} />\n        <div>\n          <h1>{title && name}</h1>\n          <p>Average score: {Math.round(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres: </h3>\n          <p>{getGenres(genres)}</p>\n        </div>\n      </Wrapper>\n\n      <InfoBlock>\n        <Text>Additional information</Text>\n        <BtnList>\n          <BtnLink to=\"cast\">Cast</BtnLink>\n          <BtnLink to=\"reviews\">Reviews</BtnLink>\n        </BtnList>\n      </InfoBlock>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nMovieData.propTypes = {\n  data: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default MovieData;\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  padding: 8px 16px;\n  margin: 20px auto;\n\n  color: black;\n  background-color: inherit;\n  font-weight: 500;\n  text-decoration: none;\n  cursor: pointer;\n\n  border-radius: 4px;\n  border: 1px solid black;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: #121110;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router';\n\nimport { fetchMovieData } from 'API';\nimport MovieData from 'components/MovieData/MovieData';\nimport HandleError from 'components/HandleError/HandleError';\nimport { Btn } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState();\n  const [error, setError] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const backToMovies = () => {\n    navigate(backLinkHref);\n  };\n\n  useEffect(() => {\n    setError(false);\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchMovieData(movieId);\n        if (response.length === 0) setError(true);\n        setMovieData(response);\n      } catch (error) {\n        setError(true);\n        console.error(error.message);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Btn type=\"button\" onClick={backToMovies}>\n        Back to movies\n      </Btn>\n          {movieData && <MovieData data={movieData} />}\n          {error && <HandleError title=\"Something went wrong\"/>}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","fetchTrendingMovies","page","response","data","results","fetchSearchMovies","value","searchParams","URLSearchParams","api_key","language","include_adult","query","fetchMovieData","id","fetchMovieCast","cast","fetchMovieReviews","Wrap","styled","Text","title","Img","Wrapper","InfoBlock","BtnList","BtnLink","NavLink","poster_path","name","vote_average","overview","genres","src","alt","Math","round","map","genre","join","getGenres","to","Suspense","fallback","Btn","useState","movieData","setMovieData","error","setError","movieId","useParams","location","useLocation","navigate","useNavigate","backLinkHref","state","from","useEffect","fetchMovies","length","console","message","type","onClick","HandleError"],"sourceRoot":""}