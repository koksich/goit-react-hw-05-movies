{"version":3,"file":"static/js/652.cce54053.chunk.js","mappings":"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","sources":["API/index.js","components/HandleError/HandleError.styled.jsx","components/HandleError/HandleError.jsx","components/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/LoadMoreBtn/LoadMoreBtn.jsx","components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '71d3c9744b233f536e82db6c03830bc2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async page => {\n    const response = await axios.get(`/trending/all/day?api_key=${API_KEY}&page=${page}`);\n    return response.data.results;\n}\n\nexport const fetchSearchMovies = async (value, page) => {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      language: 'en-US',\n      page: page,\n      include_adult: false,\n      query: value,\n    });\n\n    const response = await axios.get(`/search/movie?${searchParams}`);\n    return response.data;\n}\n\nexport const fetchMovieData = async id => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US'`);\n    return response.data;\n}\n \nexport const fetchMovieCast = async id => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US'`);\n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async id => { \n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n    })\n    const response = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n    return response.data.results;\n\n}","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 15px;\n  line-height: 1.2;\n  color: #000000;\n`;\n\n","import PropTypes from 'prop-types';\n\nimport { Wrap, Text } from './HandleError.styled';\n\nconst HandleError = ({ title }) => {\n  return (\n    <Wrap>\n      <Text>{title}</Text>\n    </Wrap>\n  );\n};\n\nHandleError.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default HandleError;\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  display: block;\n  padding: 8px 16px;\n  margin: 20px auto;\n\n  color: black;\n  background-color: inherit;\n  font-weight: 500;\n  text-decoration: none;\n  cursor: pointer;\n\n  border-radius: 4px;\n  border: 1px solid black;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: #121110;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Btn } from './LoadMoreBtn.styled';\n\nconst LoadMoreBtn = ({ onClick }) => {\n  return (\n    <Btn type=\"button\" onClick={onClick} aria-label=\"Load More\">\n      Load More...\n    </Btn>\n  );\n};\n\nLoadMoreBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default LoadMoreBtn;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Item = styled.li`\n  overflow: hidden;\n  border-radius: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.025);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  font-weight: 600;\n  font-size: 15px;\n  line-height: 1.2;\n  color: #000000;\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 480px;\n  object-fit: cover;\n\n`;\n\nexport const Title = styled.p`\n  padding: 5px 10px;\n  margin: 0;\n`;","import { useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\n\nimport { Img, Item, MovieLink, Title } from './MovieListItem.styled';\n\nconst API_URL_IMG = 'https://image.tmdb.org/t/p/original';\n\nconst MovieListItem = ({ id, title, name, image }) => {\n    const location = useLocation();\n    const currentPage = location.pathname === '/' ? 'movies' : location.pathname;\n  return (\n    <Item>\n      <MovieLink to={`${currentPage}/${id}`} state={{from: location}}>\n        <Img src={API_URL_IMG + image} alt={title ?? name} />\n        <Title>{title ?? name}</Title>\n      </MovieLink>\n    </Item>\n  );\n};\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  image: PropTypes.string,\n};\n\n\nexport default MovieListItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 30px);\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 32px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 20px 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\nimport { List } from './MovieList.styled';\n\n\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, title, name, poster_path }) => (\n        <MovieListItem\n          key={nanoid(6)}\n          id={id}\n          title={title}\n          name={name}\n          image={poster_path}\n        ></MovieListItem>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 28px;\n  line-height: 1.16;\n  letter-spacing: 0.03em;\n  margin-bottom: 15px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      {title && <Title>{title}</Title>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;","import styled from 'styled-components';\n\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  padding: 15px 20px;\n`;\n\nexport const Input = styled.input`\n  width: 480px;\n  height: 35px;\n  margin-right: 5px;\n\n  display: inline-block;\n  font: inherit;\n  border: 1px solid #121110;\n  outline: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #121110;\n  background-color: inherit;\n  font-weight: 500;\n  line-height: 1.15;\n\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  outline: none;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: #121110;\n    color: #fff;\n  }\n`;\n","import { useState } from 'react';\nimport { FiSearch } from 'react-icons/fi';\n\nimport PropTypes from 'prop-types';\n\nimport { Form, Input, Btn } from './Search.styled';\n\n\nconst Search = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n    const handleChange = ({ target: {value} }) => { \n        setValue(value);\n    }\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const searchValue = value.trim();\n        if (!searchValue) {\n            alert('The search field cannot be empty. Please, enter movie name');\n            return;\n\n        };\n        onSubmit(searchValue);\n    };\n    \n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"search\"\n        name=\"search\"\n        autoComplete=\"off\"\n        placeholder=\"Enter movie name\"\n        value={value}\n        onChange={handleChange}\n      />\n      <Btn type=\"submit\" aria-label=\"Search\">\n         {<FiSearch />}\n      </Btn>\n    </Form>\n  );\n};\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import { fetchSearchMovies } from 'API';\nimport HandleError from 'components/HandleError/HandleError';\nimport LoadMoreBtn from 'components/LoadMoreBtn/LoadMoreBtn';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Search from 'components/Search/Search';\nimport Section from 'components/Section/Section';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [pages, setPages] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    setError(false);\n    const searchValue = searchParams.get('query');\n\n    if (!searchValue) {\n      setMovies([]);\n      return;\n    }\n\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchSearchMovies(searchValue, pages);\n        const { results, total_pages } = response;\n\n        if (results.length === 0) setError(true);\n\n        setMovies(prev => [...prev, ...results]);\n        setTotalPages(total_pages);\n      } catch (error) {\n        setError(true);\n        console.error(error.message);\n      }\n    };\n\n    fetchMovies();\n  }, [pages, searchParams]);\n\n  const handleFormSubmit = value => {\n    setMovies([]);\n    setPages(1);\n    setTotalPages(1);\n    // необходимо ли делать проверку на повторяющийся квери запрос ?\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <Search onSubmit={handleFormSubmit} />\n      {movies.length > 0 && (\n        <Section title=\"List of movies by searchword: \">\n          <MoviesList movies={movies} />\n          {pages < totalPages && <LoadMoreBtn onClick={()=> setPages(prevPage => prevPage + 1)} />}\n        </Section>\n          )}\n          {error && <HandleError title=\"Something went wrong :(. Please, tray again.\"/>}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","fetchTrendingMovies","page","response","data","results","fetchSearchMovies","value","searchParams","URLSearchParams","api_key","language","include_adult","query","fetchMovieData","id","fetchMovieCast","cast","fetchMovieReviews","Wrap","styled","Text","title","Btn","onClick","type","Item","MovieLink","Link","Img","Title","name","image","location","useLocation","currentPage","pathname","to","state","from","src","alt","List","movies","map","poster_path","nanoid","children","Form","Input","onSubmit","useState","setValue","e","preventDefault","searchValue","trim","alert","autoComplete","placeholder","onChange","target","setMovies","pages","setPages","totalPages","setTotalPages","error","setError","useSearchParams","setSearchParams","useEffect","get","fetchMovies","total_pages","length","prev","console","message","Section","MoviesList","LoadMoreBtn","prevPage","HandleError"],"sourceRoot":""}