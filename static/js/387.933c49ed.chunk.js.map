{"version":3,"file":"static/js/387.933c49ed.chunk.js","mappings":"kTAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAmB,mCAAG,WAAMC,GAAN,uFACRF,EAAAA,EAAAA,IAAA,oCAAuCD,EAAvC,iBAAuDG,IAD/C,cACzBC,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,sDAKnBC,EAAiB,mCAAG,WAAOC,EAAOL,GAAd,gFACvBM,EAAe,IAAIC,gBAAgB,CACvCC,QAASX,EACTY,SAAU,QACVT,KAAMA,EACNU,eAAe,EACfC,MAAON,IANoB,SASNP,EAAAA,EAAAA,IAAA,wBAA2BQ,IATrB,cASvBL,EATuB,yBAUtBA,EAASC,MAVa,2CAAH,wDAajBU,EAAc,mCAAG,WAAMC,GAAN,uFACHf,EAAAA,EAAAA,IAAA,iBAAoBe,EAApB,oBAAkChB,EAAlC,qBADG,cACpBI,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKdY,EAAc,mCAAG,WAAMD,GAAN,uFACHf,EAAAA,EAAAA,IAAA,iBAAoBe,EAApB,4BAA0ChB,EAA1C,qBADG,cACpBI,EADoB,yBAEnBA,EAASC,KAAKa,MAFK,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,gFACvBP,EAAe,IAAIC,gBAAgB,CACrCC,QAASX,EACTY,SAAU,QACVT,KAAM,IAJmB,SAMNF,EAAAA,EAAAA,IAAA,iBAAoBe,EAApB,oBAAkCP,IAN5B,cAMvBL,EANuB,yBAOtBA,EAASC,KAAKC,SAPQ,2CAAH,qD,kFC/BjBc,EAAOC,EAAAA,GAAAA,IAAH,yHAOJC,EAAOD,EAAAA,GAAAA,EAAH,oF,SCOjB,EAZoB,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACrB,OACE,SAACH,EAAD,WACE,SAACE,EAAD,UAAOC,KAGZ,C,mLCRYC,EAAUH,EAAAA,GAAAA,IAAH,+CAIPI,EAAOJ,EAAAA,GAAAA,GAAH,wIASJK,EAAOL,EAAAA,GAAAA,GAAH,sFAKJM,EAASN,EAAAA,GAAAA,GAAH,sCAINC,EAAOD,EAAAA,GAAAA,EAAH,+C,SCgBjB,EAlCgB,WACZ,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACHD,GAAS,GAEZ,IAAME,EAAY,mCAAG,8GAESjB,EAAAA,EAAAA,IAAkBS,GAF3B,OAGU,KADlBxB,EAFQ,QAGDiC,QAAcH,GAAS,GACpCF,EAAW5B,GAJG,gDAMd8B,GAAS,GACTI,QAAQL,MAAM,KAAMM,SAPN,yDAAH,qDAWlBH,GACH,GAAE,CAACR,KAEI,UAACJ,EAAD,WACHO,EAAQM,OAAS,IAAM,SAACZ,EAAD,UACnBM,EAAQS,KAAI,YAA8B,IAA3BxB,EAA0B,EAA1BA,GAAIyB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxB,OAAQ,UAAChB,EAAD,YACJ,UAACC,EAAD,WAAQ,WAASc,MACjB,SAACnB,EAAD,UAAQoB,MAFO1B,EAGd,MAEZiB,IAAS,SAACU,EAAA,EAAD,CAAapB,MAAM,iDAEpC,C","sources":["API/index.js","components/HandleError/HandleError.styled.jsx","components/HandleError/HandleError.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '71d3c9744b233f536e82db6c03830bc2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async page => {\n    const response = await axios.get(`/trending/all/day?api_key=${API_KEY}&page=${page}`);\n    return response.data.results;\n}\n\nexport const fetchSearchMovies = async (value, page) => {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      language: 'en-US',\n      page: page,\n      include_adult: false,\n      query: value,\n    });\n\n    const response = await axios.get(`/search/movie?${searchParams}`);\n    return response.data;\n}\n\nexport const fetchMovieData = async id => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US'`);\n    return response.data;\n}\n \nexport const fetchMovieCast = async id => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US'`);\n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async id => { \n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n    })\n    const response = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n    return response.data.results;\n\n}","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: 15px;\n  line-height: 1.2;\n  color: #000000;\n`;\n\n","import PropTypes from 'prop-types';\n\nimport { Wrap, Text } from './HandleError.styled';\n\nconst HandleError = ({ title }) => {\n  return (\n    <Wrap>\n      <Text>{title}</Text>\n    </Wrap>\n  );\n};\n\nHandleError.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default HandleError;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 15px 20px;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  gap: 20px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 20px 0;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  padding-bottom: 10px;\n  border-bottom: 1px solid #121110;\n`;\n\nexport const Author = styled.h4`\n  margin: 0;\n`;\n\nexport const Text = styled.p`\n  margin: 10px 0 0 0;\n`;\n","import { fetchMovieReviews } from \"API\";\nimport HandleError from \"components/HandleError/HandleError\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Item, List, Wrapper, Author, Text } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n           setError(false);\n\n        const fetchReviews = async () => {\n           try {\n               const response = await fetchMovieReviews(movieId);\n               if (response.length === 0) setError(true);\n               setReviews(response);\n        } catch (error) {\n               setError(true);\n               console.error(error.message);\n        }\n       }\n       \n        fetchReviews();\n    }, [movieId])\n\n    return (<Wrapper>\n        {reviews.length > 0 && (<List>\n            {reviews.map(({ id, author, content }) => {\n                return (<Item key={id}>\n                    <Author>Author: {author}</Author>\n                    <Text>{ content}</Text>\n            </Item>)})}\n        </List>)}\n        {error && <HandleError title=\"Sorry, there are no reviews for this movie\"/>}\n    </Wrapper>)\n}\n\nexport default Reviews;"],"names":["API_KEY","axios","fetchTrendingMovies","page","response","data","results","fetchSearchMovies","value","searchParams","URLSearchParams","api_key","language","include_adult","query","fetchMovieData","id","fetchMovieCast","cast","fetchMovieReviews","Wrap","styled","Text","title","Wrapper","List","Item","Author","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","length","console","message","map","author","content","HandleError"],"sourceRoot":""}